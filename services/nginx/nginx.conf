user nginx;

error_log /var/log/nginx.error_log info;

events {
    worker_connections 256;
}

http {
    log_format main      '$remote_addr - $remote_user [$time_local] '
    '"$request" $status $bytes_sent '
    '"$http_referer" "$http_user_agent" '
    '"$gzip_ratio"';

    server {
        server_name localhost;
        listen 443 ssl;

        ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        access_log /var/log/nginx.access_log main;

        root /usr/share/nginx/;
	
        location / {
            index index.html;
            try_files $uri $uri/ $uri.html =404;	    
        }
        
        location /api/rec {            
            proxy_pass http://server:8080/rec;

            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
        }

        location /reg {
            try_files $uri $uri/ $uri.html =404;	    
        }
        
        location /api/reg {            
            proxy_pass http://server:8080/reg;

            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
        }
        
        location /login {
            try_files $uri $uri/ $uri.html =404;	    
        }
        
        location /api/login {            
            proxy_pass http://server:8080/login;

            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
        }
        
        location /api/cookie {            
            proxy_pass http://server:8080/cookie;

            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
        }

        
        types {
            text/html html;
            application/javascript js mjs;
        }

        error_page 404 /404.html;
    }
    
    server {
        server_name localhost;
        listen 80;
        
    	location / {
            return 302 https://$host$request_uri;
        }
    }
    
}
